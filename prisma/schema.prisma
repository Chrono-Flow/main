// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    // directUrl = env("DIRECT_URL")
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String    @unique
    emailVerified DateTime?
    image         String?
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
    projects      Project[] // One-to-many relationship with Project

    isDeleted Boolean @default(false)
    logs      Logs[]
}

model Logs {
    id        String      @id @default(cuid())
    createdAt DateTime    @default(now())
    userId    String
    user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
    message   String
    level     LogLevel
    ip        String?
    userAgent String?
    action    ActionType?
}

enum ActionType {
    CREATE
    UPDATE
    DELETE
    OTHER
}

enum LogLevel {
    INFO
    WARN
    ERROR
}

enum projectType {
    SCHEDULE
    BACKEND
}

model Project {
    id          String      @id @default(cuid())
    name        String
    description String
    image       String?
    type        projectType @default(BACKEND)
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
    userId      String
    user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)

    // for schedules
    scheduleConfig ScheduleConfig?

    // for backend
    serverCode  String?
    visibleCode String?

    nodes     Json[] @default([])
    edges     Json[] @default([])
    status    String @default("active")
    flowCount Int    @default(0)
}

model ScheduleConfig {
    id        String   @id @default(cuid())
    schedule  String   @default("* * * * *")
    timezone  String   @default("UTC")
    enabled   Boolean  @default(true)
    project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
    projectId String   @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
